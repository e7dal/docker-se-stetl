# Smart Emission Data Extract ETL - Stetl config
#
# Pieter Marsman - 2016
# Just van den Broecke - 2018
#
# This config reads raw timeseries measurements for specific sensor (-names) from Postgres DB,
# validates the measurements and writes these to InfluxDB.

# The main Stetl ETL chain
[etl]
chains = input_raw_sensor_db|progress_tracker|extract_filter|output_influxdb_write

# read raw data from timeseries table
[input_raw_sensor_db]
class = smartem.rawdbinput.RawDbInput
host = {pg_host}
database = {pg_database}
user = {pg_user}
password = {pg_password}
schema = {pg_schema_raw}
table = timeseries
output_format = record
last_gid_query = SELECT last_gid FROM smartem_extracted.extractor_progress
max_input_records = {extractor_max_input_records}
gids_query = SELECT gid from timeseries WHERE gid > %d AND gid <= %d ORDER BY gid
data_query = SELECT * from timeseries WHERE gid = %d
read_once = {extractor_raw_read_once}

# Get last gid processed and track in progress table
[progress_tracker]
class = smartem.progresstracker.ProgressTracker
input_format = record
output_format = record
host = {pg_host}
database = {pg_database}
user = {pg_user}
password = {pg_password}
schema = {pg_schema_extracted}
table = extractor_progress
id_key = gid
progress_update_query = UPDATE smartem_extracted.extractor_progress SET last_gid=%d, name='%s' WHERE id=1;

# Filters out raw records for specified sensor names and lat/lon (for geohash)
[extract_filter]
class = smartem.harvester.extractor.ExtractFilter
device_ids = 12,14,45,55,76,78
sensor_names = s_lightsensortop,s_o3resistance,s_no2resistance,s_coresistance,s_temperatureunit,s_temperatureambient,s_barometer,s_humidity

# Write records to InfluxDB server
[output_influxdb_write]
class = smartem.influxdboutput.InfluxDbOutput
input_format = record_array
method = POST
list_fanout = False
content_type = application/x-www-form-urlencoded
host = {influx_host}
port = {influx_port}
database = {influx_se_database}
measurement = {influx_se_measurement_extract}
tags_map = {{'station': 'device_id', 'component': 'name'}}
fields_map = {{'value': 'value'}}
geohash_map = {{'lat': 'lat', 'lon': 'lon' }}
geohash_field = True
geohash_tag = True
# use default names and precision (12,7) for geohash field and tag
time_attr = time
user = {influx_se_writer}
password = {influx_se_writer_password}
output_format = record_array

