# Smart Emission Data Last Values - Stetl config
#
# Just van den Broecke - 2016
#
# This config reads the last raw measurements from the CityGIS Sensor REST API.

# The main Stetl ETL chain
[etl]
chains = input_raw_sensor_last_api_2|refine_filter|output_postgres_insert,
        input_raw_sensor_last_api_1|refine_filter|output_postgres_insert

# for reading files from CityGIS Sensor REST API
[input_raw_sensor_last_api_1]
class = smartem.harvester.rawsensorlastinput.RawSensorLastInput
url = {raw_device_url_1}
api_interval_secs = 0
skip_devices = 22,29,36,37,49,53,83,82,85,89,92,102,126,133
sensor_names = temperature,humidity,pressure,noiseavg,noiselevelavg,co2,co,no2,o3,coraw,no2raw,o3raw,pm10,pm2_5

# for reading files from Intemo Sensor REST API
[input_raw_sensor_last_api_2]
class = smartem.harvester.rawsensorlastinput.RawSensorLastInput
url = {raw_device_url_2}
api_interval_secs = 0
sensor_names = temperature,humidity,pressure,noiseavg,noiselevelavg,co2,co,no2,o3,coraw,no2raw,o3raw,pm10,pm2_5
auth = {{ 'type': 'token', 'keyword': 'Bearer', 'token': '{intemo_token}' }}

# Refines raw records for specified sensor names
[refine_filter]
class = smartem.refiner.refinefilter.RefineFilter
sensor_names = temperature,humidity,pressure,noiseavg,noiselevelavg,co2,o3,co,no2,o3raw,coraw,no2raw,pm10,pm2_5
host = {pg_host}
database = {pg_database}
user = {pg_user}
password = {pg_password}
schema = {pg_schema_calibrated}
process_name = last

# for testing/debugging
[output_std]
class = outputs.standardoutput.StandardOutput

# Insert file records
[output_postgres_insert]
class = outputs.dboutput.PostgresInsertOutput
input_format = record_array
host = {pg_host}
database = {pg_database}
user = {pg_user}
password = {pg_password}
schema = {pg_schema_rt}
table = last_device_output
key=unique_id
replace=True
