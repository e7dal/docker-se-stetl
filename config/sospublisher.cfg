# Publish refined timeseries data to SOS using SOS-Transactional - Stetl config
#
# Just van den Broecke - 2016
#
# This config reads refined timeseries measurement records from the core db
# table and outputs these via HTTP into an OWS SOS.

# The main Stetl ETL chain
[etl]
chains = input_refined_ts_db|output_sos

# Query refined timeseries DB table
[input_refined_ts_db]
class = smartem.refineddbinput.RefinedDbInput
host = {pg_host}
database = {pg_database}
user = {pg_user}
password = {pg_password}
schema = {pg_schema_refined}
table = timeseries
max_input_records = {sospublisher_max_input_records}
query = SELECT gid,device_id,device_meta,sensor_meta,name,time,value,unit,altitude,ST_X(point) as lon,ST_Y(point) as lat from timeseries WHERE gid > %d AND gid <= %d ORDER BY gid
column_names = gid,device_id,device_meta,sensor_meta,name,time,value,unit,altitude,lon,lat
progress_query = SELECT * from etl_progress WHERE worker = 'sospublisher'
progress_update = UPDATE etl_progress SET last_gid = %d, last_update = current_timestamp WHERE worker = 'sospublisher'
output_format = record_array
read_once = True

[output_std]
class = outputs.standardoutput.StandardOutput

# Output sensor data (InsertObservation) and metadata (InsertSensor) to SOS
[output_sos]
class = smartem.publisher.sosoutput.SOSTOutput
host = {sos_host}
port = {sos_port}
path = {sos_path}
method = POST
content_type = application/json;charset=UTF-8
